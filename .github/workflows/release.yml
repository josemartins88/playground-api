name: release

env:
 REGISTRY: ghcr.io
 IMAGE_NAME: ${{ github.repository }}

on: 
  push:
   branches: main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 18.12.0
      uses: actions/setup-node@v3
      with:
        node-version: '18.12.0'
        cache: 'npm'
    
    - run: npm ci
    - run: npm test
    
  create_release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 'Checkout source code'
        uses: 'actions/checkout@v3'
      
      - name: 'Get current tag'
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
        with:
         semver_only: true
         initial_version: v0.0.1
         
      - uses: actions-ecosystem/action-bump-semver@v1
        id: bump-semver
        with:
          current_version: ${{ steps.get-latest-tag.outputs.tag }}
          level: patch

      - name: Create Release
        id: create_release
        uses: nickatnight/releases-action@v3
        with:
          branch: "main"
          prerelease: true
          tag: ${{ steps.bump-semver.outputs.new_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    outputs:
      release_tag: ${{ steps.create_release.outputs.release_tag }}
      
      
  build_publish_docker:
    needs: create_release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    env:
      RELEASE_TAG: ${{ needs.create-release.outputs.release_tag }}
    steps:
      - name: 'Checkout source code'
        uses: 'actions/checkout@v3'
        
      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4.1.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            ${{ env.RELEASE_TAG }}

      - name: Build and publish Docker image 
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
          
  rollback_release:
   needs: [create_release, build_publish_docker]
   env:
      RELEASE_TAG: ${{ needs.create-release.outputs.release_tag }}
   if: always()
   runs-on: ubuntu-latest
   permissions:
     contents: write
     packages: write
   steps:
     - name: Rollback Release
       if: (${{needs.create_release.result}} != 'success' || ${{needs.build_publish_docker.result}} != 'success')
       uses: author/action-rollback@1.0.0
       with:
         tag: ${{ env.RELEASE_TAG }}
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
