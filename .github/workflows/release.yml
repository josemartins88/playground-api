name: release

env:
 REGISTRY: ghcr.io
 IMAGE_NAME: ${{ github.repository }}

on: 
  push:
   branches: main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 18.12.0
      uses: actions/setup-node@v3
      with:
        node-version: '18.12.0'
        cache: 'npm'
    
    - run: npm ci
    - run: npm test
    
  create_release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 'Checkout source code'
        uses: 'actions/checkout@v3'
      
      - name: 'Get current tag'
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
        with:
         semver_only: true
         initial_version: v0.0.1
         
      - uses: actions-ecosystem/action-bump-semver@v1
        id: bump-semver
        with:
          current_version: ${{ steps.get-latest-tag.outputs.tag }}
          level: patch

      - name: Create Release
        id: create_release
        uses: nickatnight/releases-action@v3
        with:
          branch: "main"
          prerelease: true
          tag: ${{ steps.bump-semver.outputs.new_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    outputs:
      release_tag: ${{ steps.create_release.outputs.release_tag }}
      
      
  build_publish_docker:
    needs: create_release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      RELEASE_TAG: ${{ needs.create_release.outputs.release_tag }}

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::800535513774:role/gh-actions-playground-api
          aws-region: us-east-1


      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1


      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: playground-api
          IMAGE_TAG: ${{ env.RELEASE_TAG }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

          
  rollback_release:
   needs: [create_release, build_publish_docker]
   env:
      RELEASE_TAG: ${{ needs.create_release.outputs.release_tag }}
   if: ${{ failure() }}
   runs-on: ubuntu-latest
   permissions:
     contents: write
     packages: write
   steps:
     - name: Rollback Release
       uses: author/action-rollback@1.0.0
       with:
         tag: ${{ env.RELEASE_TAG }}
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
